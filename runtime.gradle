import java.nio.file.Files
import java.nio.file.NoSuchFileException

loadRuntimeProperties()

dependencies {
	// Quiltflower
	runtimeOnly libs.quiltflower

	if (bedrockify) {
		// BedrockIfy
		modRuntimeOnly libs.bedrockify

		// Cloth Config
		modRuntimeOnly libs.cloth.config
	}

	if (enhancedblockentities) {
		// Advanced Runtime Resource Packs
		modRuntimeOnly libs.advanced.runtime.resource.packs

		// Enhanced Block Entities
		modRuntimeOnly libs.enhancedblockentities

		// Fabric API
		modRuntimeOnly libs.fabric.api
	}

	if (fabricKeyBindingApiV1 || iris) {
		// Fabric Key Binding API (V1)
		modRuntimeOnly fabricApi.module('fabric-key-binding-api-v1', versions.fabric.api)
	}

	if (fabricLifecycleEventsV1) {
		// Fabric Lifecycle Events (V1)
		modRuntimeOnly fabricApi.module('fabric-lifecycle-events-v1', versions.fabric.api)
	}

	if (fabricRendererApiV1) {
		// Fabric Renderer API (V1)
		modRuntimeOnly fabricApi.module('fabric-renderer-api-v1', versions.fabric.api)
	}

	if (sodium || iris) {
		// Fabric API Base
		modRuntimeOnly fabricApi.module('fabric-api-base', versions.fabric.api)

		// Fabric Resource Loader (V0)
		modRuntimeOnly fabricApi.module('fabric-resource-loader-v0', versions.fabric.api)
	}

	if (iris) {
		// Iris
		modRuntimeOnly libs.iris

		// JCPP
		runtimeOnly libs.jcpp
	}

	if (modmenu) {
		// ModMenu
		modRuntimeOnly libs.modmenu
	}

	if (sodium || iris) {
		// Fabric Rendering Data Attachments (V1)
		modRuntimeOnly fabricApi.module('fabric-rendering-data-attachment-v1', versions.fabric.api)
		
		// Fabric Rendering Fluids (V1)
		modRuntimeOnly fabricApi.module('fabric-rendering-fluids-v1', versions.fabric.api)
		
		// GLSL Transformer
		runtimeOnly libs.glsl.transformer

		// JOML
		runtimeOnly libs.joml

		// Sodium
		modRuntimeOnly libs.sodium
	}
}

loom.runConfigs.configureEach {
	property 'mixin.debug.export', 'true'
}

def loadRuntimeProperties() {
	ext {
		bedrockify = false
		enhancedblockentities = false
		fabricKeyBindingApiV1 = true
		fabricLifecycleEventsV1 = true
		fabricRendererApiV1 = true
		iris = false
		modmenu = true
		sodium = false
	}

	final Properties runtimeProperties = new Properties();

	try (final def reader = Files.newBufferedReader(file('runtime.properties').toPath())) {
		runtimeProperties.load(reader);
	} catch (final NoSuchFileException nsfe) {
	} catch (final IOException ioe) {
		throw new UncheckedIOException(ioe);
	}

	runtimeProperties.each {
		ext[it.key] = it.value.toBoolean()
	}
}
