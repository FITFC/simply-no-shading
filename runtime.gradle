dependencies {
	// Quiltflower
	runtimeOnly libs.quiltflower

	if (bedrockify.toBoolean()) {
		// BedrockIfy
		modRuntimeOnly libs.bedrockify

		// Cloth Config
		modRuntimeOnly libs.cloth.config
	}

	if (enhancedblockentities.toBoolean()) {
		// Advanced Runtime Resource Packs
		modRuntimeOnly libs.advanced.runtime.resource.packs

		// Enhanced Block Entities
		modRuntimeOnly libs.enhancedblockentities

		// Fabric API
		modRuntimeOnly libs.fabric.api

		// SpruceUI
		modRuntimeOnly libs.spruceui
	}

	if (fabricKeyBindingApiV1.toBoolean() || iris.toBoolean()) {
		// Fabric Key Binding API (V1)
		modRuntimeOnly fabricApi.module('fabric-key-binding-api-v1', libs.versions.fabric.api.get())
	}

	if (fabricLifecycleEventsV1.toBoolean()) {
		// Fabric Lifecycle Events (V1)
		modRuntimeOnly fabricApi.module('fabric-lifecycle-events-v1', libs.versions.fabric.api.get())
	}

	if (fabricRendererAp1V1.toBoolean()) {
		// Fabric Renderer API (V1)
		modRuntimeOnly fabricApi.module('fabric-renderer-api-v1', versionRanges.fabric.api)
	}

	if (iris.toBoolean()) {
		// Fabric Resource Loader (V0)
		modRuntimeOnly fabricApi.module('fabric-resource-loader-v0', libs.versions.fabric.api.get())

		// Iris
		modRuntimeOnly libs.iris

		// JCPP
		runtimeOnly libs.jcpp
	}

	if (modmenu.toBoolean()) {
		// ModMenu
		modRuntimeOnly libs.modmenu
	}

	if (sodium.toBoolean() || iris.toBoolean()) {
		// Fabric Rendering Data Attachments (V1)
		modRuntimeOnly fabricApi.module('fabric-rendering-data-attachment-v1', libs.versions.fabric.api.get())

		// Fabric Rendering Fluids (V1)
		modRuntimeOnly fabricApi.module('fabric-rendering-fluids-v1', libs.versions.fabric.api.get())
		
		// JOML
		runtimeOnly libs.joml

		// Sodium
		modRuntimeOnly libs.sodium
	}
}

loom.runConfigs.configureEach {
	property 'mixin.debug.export', 'true'
}
