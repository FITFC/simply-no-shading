apply from: 'gradle/functions.gradle'
apply from: 'gradle/properties.gradle'

registerCompatibilityTestTask('iris')
registerCompatibilityTestTask('none')
registerCompatibilityTestTask('sodium')

tasks.configure() {
	register('cleanBuild') { group 'build'; dependsOn 'clean', 'build' }

	register('cleanBuildDependants') { group 'build'; dependsOn 'clean', 'buildDependants' }

	register('cleanBuildNeeded') { group 'build'; dependsOn 'clean', 'buildNeeded' }

	named('modrinth') {
		onlyIf {
			token = System.env.MODRINTH_TOKEN
		}

		versionType = System.env.RELEASE_TYPE ?: 'alpha'
		final boolean alpha = versionType == 'alpha'

		projectId = '9gx5Xvc5'
		versionNumber = alpha ? "${project.mod_version}${getVersionExtension()}" : project.mod_version
		versionName = "${toTitleCase versionType.toString()} ${project.mod_version} " +
 				(project.localBuild ? "Local Build ${project.localBuildNumber}" :
					"Build ${System.env.GITHUB_RUN_NUMBER}") + ' for Minecraft 1.18.x';
		changelog = alpha ? '**USE WITH CAUTION**\n\nThis is an automatic alpha build.'
			: System.env.CHANGELOG ?: 'No changelog provided'

		uploadFile = remapJar

		addGameVersion '1.18'
		addGameVersion '1.18.1'
		addLoader 'fabric'
	}

	withType(JavaCompile).configureEach {
		// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
		it.options.release = 17

		doFirst {
			println "Compiling ${project.archivesBaseName}-${project.version}..."
		}
	}
}

private final def registerCompatibilityTestTask(final String mode) {
	return tasks.configure() {
		register("\$${mode}") {
			doFirst {
				final def propertiesFile = file 'gradle.properties'
	
				propertiesFile.text = propertiesFile.text.replaceFirst '-Dsimply-no-shading.compatibilityTest=\\w+',
					'-Dsimply-no-shading.compatibilityTest=' + mode
			}
		}

		register("test${toTitleCase mode}") {
			group 'compatibility test'

			doFirst {
				final def propertiesFile = file 'gradle.properties'
	
				propertiesFile.text = propertiesFile.text.replaceFirst '-Dsimply-no-shading.compatibilityTest=\\w+',
					'-Dsimply-no-shading.compatibilityTest=' + mode
			}

			dependsOn "\$${mode}"
			dependsOn 'cleanEclipse'
			dependsOn 'eclipse'
			dependsOn 'runClient'
		}
	}
}
