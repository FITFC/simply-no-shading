configurations {
	includeApi
	include                 .extendsFrom includeApi
	       api              .extendsFrom includeApi

	includeImplementation
	include                 .extendsFrom includeImplementation
	       implementation   .extendsFrom includeImplementation

	includeModApi
	include                 .extendsFrom includeModApi
	       modApi           .extendsFrom includeModApi

	includeModImplementation
	include                 .extendsFrom includeModImplementation
	       modImplementation.extendsFrom includeModImplementation
}

dependencies.ext {
	fabricModuleApi = { final def module, final def version = fabricVersion ->
		return dependencies.modApi(fabricApiModule(module, version))
	}
	
	fabricModuleCompileOnly = { final def module, final def version = fabricVersion ->
		return dependencies.modCompileOnly(fabricApiModule(module, version))
	}
	
	fabricModuleImplementation = { final def module, final def version = fabricVersion ->
		return dependencies.modImplementation(fabricApiModule(module, version))
	}

	fabricModuleRuntimeOnly = { final def module, final def version = fabricVersion ->
		return dependencies.modRuntimeOnly(fabricApiModule(module, version))
	}

	includeFabricModuleApi = { final def module, final def version = fabricVersion ->
		return dependencies.includeModApi(fabricApiModule(module, version))
	}

	includeFabricModuleImplementation = { final def module, final def version = fabricVersion ->
		return dependencies.includeModImplementation(fabricApiModule(module, version))
	}
}
