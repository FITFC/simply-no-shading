apply from: 'local.gradle'

def getModRuntime() {
	ext.properties.findAll {
		String.valueOf it.key startsWith 'runtime.'
	} collectEntries {
		[String.valueOf(it.key).substring(8), String.valueOf(it.value).toBoolean()]
	}
}

def modRuntime(Closure closure) {
	modRuntime.with closure
}

dependencies {
	// Fabric Lifecycle Events (V1)
	modRuntimeOnly fabricApi.module('fabric-lifecycle-events-v1', libs.versions.fabric.api.get())

	// LazyDFU
	modRuntimeOnly libs.lazydfu

	if (modRuntime.bedrockify) {
		// BedrockIfy
		modRuntimeOnly libs.bedrockify

		// Cloth Config
		modRuntimeOnly libs.bedrockify.include.cloth.config.fabric, {
			exclude group: 'net.fabricmc.fabric-api', module: 'fabric-api'
		}

		// Fabric Biome API (V1)
		modRuntimeOnly fabricApi.module('fabric-biome-api-v1', libs.versions.fabric.api.get())

		// Fabric Events Interaction (V0)
		modRuntimeOnly fabricApi.module('fabric-events-interaction-v0', libs.versions.fabric.api.get())
	}
	
	if (modRuntime.enhancedblockentities) {
		// ARRP
		modRuntimeOnly libs.enhancedblockentities.include.arrp

		// Enhanced Block Entities
		modRuntimeOnly libs.enhancedblockentities

		// Fabric API
		modRuntimeOnly libs.fabric.api
	}

	if (modRuntime { fabricKeyBindingApiV1 || iris }) {
		// Fabric Key Binding API (V1)
		modRuntimeOnly fabricApi.module('fabric-key-binding-api-v1', libs.versions.fabric.api.get())
	}

	if (modRuntime.fabricRenderApiV1) {
		// Fabric Renderer API (V1)
		modRuntimeOnly fabricApi.module('fabric-renderer-api-v1', libs.versions.fabric.api.get())
	}

	if (modRuntime.iris) {
		// Iris
		modRuntimeOnly libs.iris

		// JCPP
		modRuntimeOnly libs.iris.include.jcpp
	}

	if (modRuntime.modmenu) {
		// ModMenu
		modRuntimeOnly libs.modmenu
	}

	if (modRuntime { sodium || iris }) {
		// Fabric API Base
		modRuntimeOnly fabricApi.module('fabric-api-base', libs.versions.fabric.api.get())

		// Fabric Rendering Data Attachment (V1)
		modRuntimeOnly fabricApi.module('fabric-rendering-data-attachment-v1', libs.versions.fabric.api.get())

		// Fabric Rendering Fluids (V1)
		modRuntimeOnly fabricApi.module('fabric-rendering-fluids-v1', libs.versions.fabric.api.get())

		// Fabric Resource Loader (V0)
		modRuntimeOnly fabricApi.module('fabric-resource-loader-v0', libs.versions.fabric.api.get())

		// JOML
		modRuntimeOnly libs.sodium.include.joml

		// Sodium
		modRuntimeOnly libs.sodium
	}
}
