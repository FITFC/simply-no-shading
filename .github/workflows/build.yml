name: build
on:
  pull_request:
  push:
  workflow_dispatch:
    inputs:
      changelog:
        required: false

jobs:
  bumpVersion:
    strategy:
      matrix:
        # Use these Java versions
        java: [ 17 ] # Current Java LTS & minimum supported by Minecraft
    runs-on: ubuntu-20.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: activate gradle wrapper
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: bumpVersion
        run: ./gradlew bumpVersion
        env:
          CHANGELOG: ${{ github.event.commits.message }}
          RELEASE_TYPE: alpha
      - name: commit version bump
        run: |
          git config --local user.name "Build Action"
          git add ./gradle.properties
          git commit -m "Bump Version"
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
  buildArtifacts:
    needs: bumpVersion
    strategy:
      matrix:
        # Use these Java versions
        java: [ 17 ] # Current Java LTS & minimum supported by Minecraft
    runs-on: ubuntu-20.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: activate gradle wrapper
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
        env:
          RELEASE_TYPE: alpha
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
  curseforge:
    needs: bumpVersion
    strategy:
      matrix:
        # Use these Java versions
        java: [ 17 ] # Current Java LTS & minimum supported by Minecraft
    runs-on: ubuntu-20.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: activate gradle wrapper
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: curseforge
        run: ./gradlew remapJar curseforge
        env:
          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
          RELEASE_TYPE: alpha
  modrinth:
    needs: bumpVersion
    strategy:
      matrix:
        # Use these Java versions
        java: [ 17 ] # Current Java LTS & minimum supported by Minecraft
    runs-on: ubuntu-20.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: activate gradle wrapper
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: modrinth
        run: ./gradlew build modrinth
        env:
          CHANGELOG: ${{ github.event.inputs.changelog }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          RELEASE_TYPE: alpha
