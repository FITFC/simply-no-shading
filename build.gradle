plugins {
	alias libs.plugins.fabric.loom
	alias libs.plugins.loom.quiltflower
}

apply from: 'fabricMod.gradle'
apply from: 'runtime.gradle'

version = "fabric${minecraftTag '-mc'}-${modVersion}"
modVersion = "${modVersion}+${minecraftTag()}"

repositories {
	maven { url 'https://api.modrinth.com/maven'; content { includeGroup 'maven.modrinth' } }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.gegy.dev' }
	maven { url 'https://maven.parchmentmc.org' }
	maven { url 'https://maven.quiltmc.org/repository/release' }
	maven { url 'https://maven.shedaniel.me' }
	maven { url 'https://maven.terraformersmc.com' }
	maven { url 'https://storage.googleapis.com/devan-maven' }
}

dependencies {
	// BedrockIfy
	modCompileOnly libs.bedrockify

	// Enhanced Block Entities
	modCompileOnly libs.enhancedblockentities

	// Fabric Key Binding API (V1)
	modCompileOnly fabricApi.module('fabric-key-binding-api-v1', versions.fabric.api)

	// Fabric Lifecycle Events (V1)
	modCompileOnly fabricApi.module('fabric-lifecycle-events-v1', versions.fabric.api)

	// Fabric Renderer API (V1)
	modCompileOnly fabricApi.module('fabric-renderer-api-v1', versions.fabric.api)

	// Fabric Loader
	modImplementation libs.fabric.loader

	// Iris
	modCompileOnly libs.iris

	// Layered Mappings
	mappings loom.layered {
		officialMojangMappings()
		// Uncomment when its available
		// parchment "org.parchmentmc.data:parchment-${versions.minecraft}:${versions.parchment}@zip"
	}

	// Minecraft
	minecraft libs.minecraft

	// ModMenu
	modCompileOnly libs.modmenu

	// Sodium
	modCompileOnly libs.sodium

	// SpruceUI
	modImplementation libs.spruceui
	include libs.spruceui
}

java {
	toolchain.languageVersion = JavaLanguageVersion.of(versions.java)
	
	withJavadocJar()
	withSourcesJar()
}

jar {
	from 'LICENSE', {
		rename { "${it}_${project.archivesBaseName}" }
	}
}
