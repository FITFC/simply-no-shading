plugins {
	alias libs.plugins.fabric.loom
	alias libs.plugins.loom.quiltflower
}

apply from: 'mod.gradle'
// apply from: 'tests.gradle'

version = "fabric-mc${mods.versions.minecraft}-${modVersion}"
modVersion = "${modVersion}+mc${mods.versions.minecraft}"

repositories {
	maven { url 'https://api.modrinth.com/maven'; content { includeGroup 'maven.modrinth' } }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.gegy.dev' }
	maven { url 'https://maven.parchmentmc.org' }
	maven { url 'https://maven.quiltmc.org/repository/release' }
	maven { url 'https://maven.shedaniel.me' }
	maven { url 'https://maven.terraformersmc.com' }
	maven { url 'https://storage.googleapis.com/devan-maven' }
}

dependencies {
	// BedrockIfy
	modCompileOnly libs.bedrockify

	// Enhanced Block Entities
	modCompileOnly libs.enhancedblockentities

	// Fabric Key Binding API (V1)
	modCompileOnly fabricApi.module('fabric-key-binding-api-v1', libs.versions.fabric.api.get())

	// Fabric Lifecycle Events (V1)
	modCompileOnly fabricApi.module('fabric-lifecycle-events-v1', libs.versions.fabric.api.get())

	// Fabric Renderer API (V1)
	modCompileOnly fabricApi.module('fabric-renderer-api-v1', libs.versions.fabric.api.get())

	// Fabric Loader
	modImplementation libs.fabric.loader

	// Iris
	modCompileOnly libs.iris

	// Layered Mappings
	mappings loom.layered {
		officialMojangMappings()
		parchment "org.parchmentmc.data:parchment-${libs.versions.minecraft.get()}:${libs.versions.parchment.get()}@zip"
	}

	// Minecraft
	minecraft libs.minecraft

	// ModMenu
	modCompileOnly libs.modmenu

	// Sodium
	modCompileOnly libs.sodium

	// SpruceUI
	modCompileOnly libs.spruceui
}

mods.versionFilters.putAll([
	'iris': { it.replaceFirst(/(?:.+-)?v/, '') },
	'sodium': { it.replaceFirst(/mc[^-]+-/, '') }
])

processResources {
	inputs.property 'version', modVersion

	filesMatching 'fabric.mod.json', {
		expand 'version': modVersion, 'versions': mods.versions
	}
}

java {
	toolchain.languageVersion = JavaLanguageVersion.of(17)
	
	withJavadocJar()
	withSourcesJar()
}

jar {
	from 'LICENSE', {
		rename { "${it}_${project.archivesBaseName}" }
	}
}
