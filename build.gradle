plugins {
	alias libs.plugins.fabric.loom
	alias libs.plugins.loom.quiltflower
}

apply from: 'mod.gradle'
apply from: 'runtimeMods.gradle'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = 'com.github.startsmercury'
archivesBaseName = 'simply-no-shading'
version = "4.0.2+${libs.versions.minecraft.get()}"

repositories {
	maven { url 'https://api.modrinth.com/maven'; content { includeGroup 'maven.modrinth' } }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.gegy.dev' }
	maven { url 'https://maven.parchmentmc.org' }
	maven { url 'https://maven.quiltmc.org/repository/release' }
	maven { url 'https://maven.shedaniel.me' }
	maven { url 'https://maven.terraformersmc.com' }
	maven { url 'https://storage.googleapis.com/devan-maven' }
}

dependencies {
	testCompileOnly gradleApi()

	// BedrockIfy
	modCompileOnly libs.bedrockify

	// Enhanced Block Entities
	modCompileOnly libs.enhancedblockentities

	// Fabric Key Binding API (V1)
	modCompileOnly fabricApi.module('fabric-key-binding-api-v1', libs.versions.fabric.api.get())

	// Fabric Lifecycle Events (V1)
	modCompileOnly fabricApi.module('fabric-lifecycle-events-v1', libs.versions.fabric.api.get())

	// Fabric Renderer API (V1)
	modCompileOnly fabricApi.module('fabric-renderer-api-v1', libs.versions.fabric.api.get())

	// Fabric Loader
	modImplementation libs.fabric.loader

	// Iris
	modCompileOnly libs.iris

	// Layered Mappings
	mappings loom.layered {
		officialMojangMappings()
		parchment "org.parchmentmc.data:parchment-${libs.versions.minecraft.get()}:${libs.versions.parchment.get()}@zip"
	}

	// Minecraft
	minecraft libs.minecraft

	// ModMenu
	modCompileOnly libs.modmenu

	// Sodium
	modCompileOnly libs.sodium

	// SpruceUI
	modImplementation libs.spruceui
	include libs.spruceui
}

mods.versionFilters.putAll(
	'iris':   { replaceFirst(/^[^-]+-v/, '') },
	'sodium': { replaceFirst(/^mc[^-]+-/, '') }
)

processResources {
	inputs.property 'version', version

	filesMatching 'fabric.mod.json', {
		expand 'version': version, 'versions': mods.versions
	}
}

java {
	withJavadocJar()
	withSourcesJar()
}

jar {
	from 'LICENSE', {
		rename { "${it}_$project.archivesBaseName" }
	}
}

tasks.withType JavaCompile configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	options.release = 17
}
